1： sql语句尽量大写
2：关联查询时尽量避免使用inner join ，字段前面添加表的别名。

用TRUNCATE替代DELETE
不要用in，not in，用exists，not exists 来代替
用索引提高效率
用>=替代>
用UNION替换OR (适用于索引列) 
避免在索引列上使用IS NULL和IS NOT NULL 



1、减少数据访问（减少磁盘访问）
2、返回更少数据（减少网络传输或磁盘访问）
3、减少交互次数（减少网络传输）
4、减少服务器CPU开销（减少CPU及内存开销）
5、利用更多资源（增加资源）




CREATE OR REPLACE PROCEDURE "UPDATE_ORG_LEVELCODE"
       (updatedBy  in varchar2,--当前人id
        updatedTime  in varchar2,--当前操作时间
        orgid      in varchar2,--当前操作机构的uuid
        orgsp      in varchar2,--操作到哪一目录
        level_code in varchar2,--默认-1
        state out varchar2 ) 
  AS
  exec_sql varchar2(400);
  ower_level_code varchar2(200); 
  new_level_code varchar2(200);
  parent_level_code varchar2(200);
  
  --获取当前orgid的第一级孩子节点
  CURSOR child_list(orgid varchar2) IS SELECT * FROM T_SYS_ORG t where t.org_sp = orgid;
  child_item T_SYS_ORG%ROWTYPE;  --游标的类型，我理解类似于list的泛型
BEGIN
  state := 'success';

  IF orgsp != '-1' THEN
    
    --获取当前orgid自己的levelcode
    DBMS_OUTPUT.PUT_LINE(orgid);
    exec_sql := 'SELECT ORG_CODE FROM T_SYS_ORG where ID= '''||orgid||'''';
    execute immediate exec_sql into ower_level_code;
    DBMS_OUTPUT.PUT_LINE(exec_sql);
    DBMS_OUTPUT.PUT_LINE(ower_level_code);
  
    
    --获取当前orgid父类的levelcode
    DBMS_OUTPUT.PUT_LINE(orgsp);
    exec_sql := 'SELECT LEVEL_CODE FROM T_SYS_ORG where ID= '''||orgsp||'''';
    execute immediate exec_sql into parent_level_code;
    DBMS_OUTPUT.PUT_LINE(exec_sql);
    new_level_code := parent_level_code||ower_level_code||'***VTEAM***';


    --修改当前id的levelcode、btbch
    exec_sql := 'UPDATE T_SYS_ORG set LEVEL_CODE = '''||new_level_code||''', org_sp = '''||orgsp||''', updated_by = '''||updatedBy||''', updated_time = '''||updatedTime||''' where ID= '''||orgid||'''';
    DBMS_OUTPUT.PUT_LINE(exec_sql);
    execute immediate exec_sql;
    
    --把当前bchid创建的levelcode赋值给parent_level_code，供下方子节点使用
    parent_level_code := new_level_code;
  END IF;

  --除第一次以外，递归中传递的level_code都不为空，赋值给parent_level_code
  --IF level_code != '-1' THEN
    --parent_level_code := level_code;
  --END IF;

  FOR child_item IN child_list(orgid) LOOP
      new_level_code := parent_level_code||child_item.org_code||'***VTEAM***';
      DBMS_OUTPUT.PUT_LINE(new_level_code);
      exec_sql := 'UPDATE T_SYS_ORG set LEVEL_CODE='''||new_level_code||''', updated_by = '''||updatedBy||''', updated_time = '''||updatedTime||''' WHERE id = '''||child_item.id||'''';
      DBMS_OUTPUT.PUT_LINE(exec_sql);
      execute immediate exec_sql;
      
      --递归循环当前子集的子集
      UPDATE_ORG_LEVELCODE(updatedBy,updatedTime,child_item.id,'-1', new_level_code,state);
 END LOOP;
COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    state := 'error';
    ROLLBACK;
END;
