
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #server {
        #listen       80;
        #server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
            #root   html;
            #index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
           #root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    upstream scf{
		ip_hash;
		server 10.66.220.35:8082;
		#server 10.66.30.84:8082;
		#server 10.66.30.85:8082;
		#server 10.66.220.36:8082;
		 
	}
	
	server {
		listen	80;
		listen	443	ssl;
		server_name	scftest.yutong.com; 
		ssl_certificate		/usr/local/etc/ssl/_.yutong.com.crt;
		ssl_certificate_key	/usr/local/etc/ssl/_.yutong.com.key;
		ssl_session_timeout	5m;
		
		location / {
                       if ( $request_uri = "/" ) {
				rewrite ^(.*)$ https://scftest.yutong.com/scfs/pages/index.html break;
			}
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-Proto https;
			proxy_redirect off;
			proxy_connect_timeout      240;
			proxy_send_timeout         240;
			proxy_read_timeout         240;
			# note, there is not SSL here! plain HTTP is used
			proxy_pass http://scf;
			client_max_body_size 50m;
			
		}
	}
	
	upstream scf01{
		ip_hash;
		server 10.66.220.35:7002;
		#server 10.66.30.84:8082;
		#server 10.66.30.85:8082;
		#server 10.66.220.36:8082;
		 
	}
	
	server {
		listen	7002;
		server_name	scftest.yutong.com; 
		ssl_certificate		/usr/local/etc/ssl/_.yutong.com.crt;
		ssl_certificate_key	/usr/local/etc/ssl/_.yutong.com.key;
		ssl_session_timeout	5m;
		
		location / {
            if ( $request_uri = "/" ) {
				rewrite ^(.*)$ http://scftest.yutong.com:7002/scfs/scfswebservice.WebServiceCust?wsdl break;
			}
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-Proto https;
			proxy_redirect off;
			proxy_connect_timeout      240;
			proxy_send_timeout         240;
			proxy_read_timeout         240;
			# note, there is not SSL here! plain HTTP is used
			proxy_pass http://scf01;
			client_max_body_size 50m;
			
		}
	}
	
	
	server {
		listen 8864;
		location / {
             root   html;
            index  /yx/index.html;
		}
	}
	
	server {
		listen 8863;
		location / {
            root   html/scfs;
            index  /index.html;
		}
	}
	
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
